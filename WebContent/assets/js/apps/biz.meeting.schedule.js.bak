/*=======================================*/
/*	Alan Liu                             */
/*	email:mingliu@bizconf.cn	         */
/*	2013-07-23                           */
/*=======================================*/

function closeDialog() {
	parent.$("#bookMeeting").trigger("closeDialog");
}
function getDateStr(dateStr, hourStr, minStr) {
	return dateStr + " " + hourStr + ":" + minStr + ":00";
}
function checkForm(index) {
	if(index=="1") {
		if(!checkBaseInfo()){
			return false;
		}
	} else if (index=="2") {
		if(!checkTimeInfo()) {
			return false;
		}
	} else if (index=="3") {
		if(!checkParamInfo()) {
			return false;
		}
	}
	return true;
}

function checkBaseInfo() {
	var confName = $("#confName").val();
	if(!confName || confName.length==0){
		parent.errorDialog("请输入会议主题!", function() {
			$("#confName").focus();
		});
		return false;
	}
	if(confName.length<1 || confName.length>32) {
		parent.errorDialog("主题长度为1~32个任意字符!", function() {
			$("#confName").focus();
		});
		return false;
	}
	
	var hostKey = $("#hostKey").val();
	if(!hostKey || hostKey.length==0){
		parent.errorDialog("请输入主持人密码!", function() {
			$("#hostKey").focus();
		});
		return false;
	}
	if(hostKey && !hostKey.isDigit()){
		parent.errorDialog("主持人密码必须是数字!", function() {
			$("#hostKey").focus();
		});
		return false;
	}
	if(hostKey.length<6 ||hostKey.length>12){
		parent.errorDialog("主持人密码长度为6~12个字符!", function() {
			$("#hostKey").focus();
		});
		return false;
	}
	var allowPublic = $('input:radio[name="allowPublic"]:checked').val();
	var publicPass = $('input:radio[name="publicPass"]:checked').val();
	if(allowPublic=="1" && publicPass=="1") {
		var confPass = $("#confPass").val().trim();
		if(!confPass){
			parent.errorDialog("请输入会议密码!", function() {
				$("#confPass").focus();
			});
			return false;
		}
		if(confPass.length<6 ||confPass.length>16){
			parent.errorDialog("会议密码长度为6~16个字符!", function() {
				$("#confPass").focus();
			});
			return false;
		}
		var confirmPass = $("#confirmPass").val().trim();
		if(!confirmPass){
			parent.errorDialog("请输入确认密码!", function() {
				$("#confirmPass").focus();
			});
			return false;
		}
		if(confirmPass.length<6 ||confirmPass.length>16){
			parent.errorDialog("确认密码的长度为6~16个字符!", function() {
				$("#confirmPass").focus();
			});
			return false;
		}
		if(confPass!=confirmPass){
			parent.errorDialog("两次密码不一致!", function() {
				if(!confPass){
					$("#confPass").focus();	
				} else if(!confirmPass){
					$("#confirmPass").focus();
				}
			});
			return false;
		}	
	}
	var confDesc = $("#confDesc").val();
	if(confDesc && (confDesc.length<1 ||confDesc.length>150)){
		parent.errorDialog("会议描述的长度为1~150个字符!", function() {
			$("#confDesc").focus();
		});
		return false;
	}
	return true;
}

function checkTimeInfo() {
	var repeat = $('input:radio[name="repeat"]:checked').val();
	if(repeat=="1") {
		//定期模式  按天
		var cycleType = $('input:radio[name="ontime"]:checked').val();
		var cycleValue = 0;
		switch (cycleType) {
			case "1":
				var cycleDayValue = $("#cycleDayFlag").val();
				if(!cycleDayValue){
					parent.errorDialog("请输入间隔天数!", function() {
						$("#cycleDayFlag").focus();
					});
					return false;
				}
				if(!cycleDayValue.isInteger()){
					parent.errorDialog("间隔天数必须是整数!", function() {
						$("#cycleDayFlag").focus();
					});
					return false;
				}
				if(cycleDayValue<1 || cycleDayValue>31){
					parent.errorDialog("间隔天数范围最少为一天, 最多31天!", function() {
						$("#cycleDayFlag").focus();
					});
					return false;
				}
				cycleValue = cycleDayValue;
				break;
			case "2":
				//定期模式  按周
				var chk_value =[];    
				$('input[name="weekday"]:checked').each(function(){    
				   chk_value.push($(this).val());    
				});
				if(chk_value.length==0){
					parent.errorDialog("请至少选择一个星期!", function() {
						
					});
					return false;
				}
				cycleValue = chk_value.toString();
				break;
			default:
				//定期模式  按月
				var monthFlag = $('input:radio[name="month-type"]:checked').val();
				if(monthFlag=="1") {
					var cycleDayValue = $("#eachMonthDay").val();
					if(!cycleDayValue){
						parent.errorDialog("请输入间隔天数!", function() {
							$("#eachMonthDay").focus();
						});
						return false;
					}
					if(!cycleDayValue.isInteger()){
						parent.errorDialog("间隔天数必须是整数!", function() {
							$("#eachMonthDay").focus();
						});
						return false;
					}
					if(cycleDayValue<1 || cycleDayValue>31){
						parent.errorDialog("间隔天数范围最少为一天, 最多31天!", function() {
							$("#eachMonthDay").focus();
						});
						return false;
					}
					cycleValue = cycleDayValue;
				} else {
					var week = $("#weekFlag").val();
					var weekDay = $("#weekDay").val();
					cycleValue = week+";"+weekDay;
				}
				break;
		}
		
		//重复范围
		var repeatScope = $('input:radio[name="repeatScope"]:checked').val();
		if (repeatScope=="3") {
			var startTime = $("#startTime").val();
			var startTimeH = $("#startTimeH").val();
			var startTimeM = $("#startTimeM").val();
			var startDateStr = getDateStr(startTime, startTimeH, startTimeM);

			var endTime = $("#endTime").val();
			var endTimeH = $("#startTimeH").val();
			var endTimeM = $("#startTimeM").val();
			var endDateStr = getDateStr(endTime, endTimeH, endTimeM);
			var dateList = getDateListFromCycleScope(startDateStr, endDateStr, cycleType, cycleValue, false);
			if(dateList==null || dateList.length==0){
				parent.errorDialog("循环的日期不正确!", function() {
					
				});
				return false;								
			}
			//结束时间不能早于开始时间
		}
		
	} else {
		//开始时间不能早于当前时间
		var startTime = $("#startTime").val();
		var startTimeH = $("#startTimeH").val();
		var startTimeM = $("#startTimeM").val();
		var startDate = getDateStr(startTime, startTimeH, startTimeM).parseDate();
		if(startDate.before(serverDate)) {
			parent.errorDialog("开始时间不能早于当前时间!", function() {
				$("#startTime").focus();
			});
			return false;
		}
		var bytype = $('input:radio[name="bytype"]:checked').val();
		if(bytype=="1") {
			//结束时间不能早于开始时间
			var endTime = $("#endTime").val();
			var endTimeH = $("#endTimeH").val();
			var endTimeM = $("#endTimeM").val();
			var endDate = getDateStr(endTime, endTimeH, endTimeM).parseDate();
			if (endDate.before(startDate)) {
				parent.errorDialog("结束时间不能早于开始时间!", function() {
					$("#endTime").focus();
				});
				return false;
			}
			if (endDate.equalTo(startDate)) {
				parent.errorDialog("会议时长至少为5分钟!", function() {
					$("#endTime").focus();
				});
				return false;
			}
		} else {
			//持续时间最少5分钟
			var durationH = $("#durationH").val();
			var durationM = $("#durationM").val();
			if (durationH=="0" && durationM=="0") {
				parent.errorDialog("持续时间最少5分钟!", function() {
					$("#durationH").focus();
				});
				return false;
			}
		}
	}
	return true;
}
function checkParamInfo() {
	var aheadTime = $("#aheadTime").val();
	if(!aheadTime){
		parent.errorDialog("请输入会议提前时间!", function() {
			$("#aheadTime").focus();
		});
		return false;
	}
	if(!aheadTime.isInteger()){
		parent.errorDialog("会议提前时间必须是整数!", function() {
			$("#aheadTime").focus();
		});
		return false;
	}
	if(aheadTime && (parseInt(aheadTime, 10)>60 || parseInt(aheadTime, 10)<5) ){
		parent.errorDialog("会议提前时间范围为5~60分钟", function() {
			$("#aheadTime").focus();
		});
		return false;
	}
	return true;
}
//创建会议完成后返回会议信息到成功页面
function createMeetSuccess(result) {
	var confBase = result.confBase[0];
	var frame = parent.$("#bookMeeting");
	frame.data("data", result);
	var confCycle = null;
	if(result.confCycle){
		confCycle = result.confCycle[0];	
	}
	$("#confIdForEmail").val(confBase.id);
	$("#confTitle").text(confBase.confName);   
	$("#confStartTime").text(confBase.startTime);   
	var duraH = parseInt(confBase.duration/60);
	var duraM = confBase.duration%60;
	var duraString = "";
	if(duraM > 1){
		duraString = duraM + " " + "分钟";
	}else if(duraM == 1){
		duraString = duraM + " " + "分钟";
	}
	
	if(duraH > 1){
		duraString = duraH + " " + "小时" + " " +duraString; 
	}else if(duraH == 1){
		duraString = duraH + " " + "小时" + " " +duraString; 
	}
	$("#confDuration").text(duraString);    //会议时长 ：1小时30分
	if(confBase.permanentConf && confBase.permanentConf=="1"){
		$("#durationConsole").hide();
		$("#endTimeConsole").show();
		$("#confEndTimeConsole").text(confBase.endTime);
	}
	
	//定期模式
	var cycleType = confCycle.cycleType;
	var infiniteFlag = confCycle.infiniteFlag;
	var repeatCount = confCycle.repeatCount;
	var cycleEndDate = confCycle.endDate;
	//重复范围
	var repeatScope = "";
	var cycleOption = 1;
	if(cycleType == 1){
		cycleType = "日循环会议";    //定期模式:日循环会议
	}else if(cycleType == 2){
		cycleType = "周循环会议";    //定期模式:周循环会议
	}else if(cycleType == 3){
		cycleType =  "月循环会议";   //定期模式:月循环会议
	}else{
		cycleOption = 0;
		cycleType = "非周期循环会议";	   //定期模式:非周期循环会议
	}
	if(repeatCount > 0){
		repeatScope = "重复%s次后结束".replace("%s",repeatCount);
	}else if(infiniteFlag == 1){
		repeatScope = "无结束日期";
	}else if(cycleEndDate != ""){
		repeatScope = "结束日期 " + cycleEndDate.parseDate().format("yyyy-MM-dd");
	}
	if(cycleOption == 0){
		$("#confPatternTR").hide();     //隐藏定期模式
		$("#confRepeatTR").hide();     //隐藏重复范围
	}else{
		$("#confPattern").text(cycleType);     //定期模式
		$("#confRepeatScope").text(repeatScope);     //重复范围
	}
	//语音模式
	
	//会议类型    
	var confType = confBase.confType;
	if(confBase.confType == 1){
		confType = "电话功能";       //会议类型 :电话功能    
	}
	if(confBase.confType == 2){
		confType = "视频功能";  	//会议类型 :视频功能   
	}
	if(confBase.confType == 3){
		confType = "视频功能、电话功能";         //会议类型 :视频功能、电话功能  
	}
	$("#confType").text(confType);  
	if(confBase.confType == 0){
		$("#confTypeTR").hide();	 //隐藏会议类型
	}
	$("#confVoicePattern").text("网络语音");
	if(confType==1 || confType==3){   //语音模式为：网络语音+电话语音
		$("#confVoicePattern").text("网络语音+电话语音");
	}
	$(".valid-group").eq(3).show().siblings().hide();
}

//修改会议完成后返回会议信息到成功页面
function updateMeetSuccess(result) {
	$(".face-success").text("修改会议成功！");
	var confBase = result.confBase[0];
	var frame = parent.$("#bookMeeting");
	frame.data("data", result);
	var confCycle = null;
	if(result.confCycle){
		confCycle = result.confCycle[0];	
	}
	$("#confIdForEmail").val(confBase.id);
	$("#confTitle").text(confBase.confName);  
	$("#confStartTime").text(confBase.startTime);
	if(confCycle != null){
		//定期模式
		var cycleType = confCycle.cycleType;
		var infiniteFlag = confCycle.infiniteFlag;
		var repeatCount = confCycle.repeatCount;
		var cycleBeginDate = confCycle.beginDate;
		var cycleEndDate = confCycle.endDate;
		$("#confStartTime").text(cycleBeginDate.parseDate().format("yyyy-MM-dd hh:mm:ss"));
		//重复范围
		var repeatScope = "";
		var cycleOption = 1;
		if(cycleType == 1){
			cycleType = "日循环会议";    //定期模式:日循环会议
		}else if(cycleType == 2){
			cycleType = "周循环会议";    //定期模式:周循环会议
		}else if(cycleType == 3){
			cycleType =  "月循环会议";   //定期模式:月循环会议
		}else{
			cycleOption = 0;
			cycleType = "非周期循环会议";	   //定期模式:非周期循环会议
		}
		if(repeatCount > 0){
			repeatScope = "重复%s次后结束".replace("%s",repeatCount);
		}else if(infiniteFlag == 1){
			repeatScope = "无结束日期";
		}else if(cycleEndDate != ""){
			repeatScope = "结束日期 " + cycleEndDate.parseDate().format("yyyy-MM-dd");
		}
		if(cycleOption == 0){
			$("#confPatternTR").hide();     //隐藏定期模式
			$("#confRepeatTR").hide();     //隐藏重复范围
		}else{
			$("#confPattern").text(cycleType);     //定期模式
			$("#confRepeatScope").text(repeatScope);     //重复范围
		}
	}else{
		$("#confPatternTR").hide();     //隐藏定期模式
		$("#confRepeatTR").hide();     //隐藏重复范围
	}
	
	var confType = confBase.confType;
	if(confBase.confType == 1){
		confType = "电话功能";       //会议类型 :电话功能    
	}
	if(confBase.confType == 2){
		confType = "视频功能";  	//会议类型 :视频功能   
	}
	if(confBase.confType == 3){
		confType = "视频功能、电话功能";         //会议类型 :视频功能、电话功能  
	}
	$("#confType").text(confType);         //会议功能    
	if(confBase.confType == 0){
		$(".confTypeTR").hide();	 //隐藏会议类型
//		confType = validString.pageRequired.firConfType;       //会议功能 :数据会议功能   
	}
	$("#confVoicePattern").text("网络语音");
	if(confType==1 || confType==3){   //语音模式为：网络语音+电话语音
		$("#confVoicePattern").text("网络语音+电话语音");
	}
	$("#maxUserSpan").text(confBase.maxUser);         //最大参会人数
	$("#userSecureSpan").text(confBase.userSecure); 		//与会者安全会议号
	$("#confDescSpan").text(confBase.confDesc); 		//会议描述
	var duraH = parseInt(confBase.duration/60);
	var duraM = confBase.duration%60;
	var duraString = "";
	if(duraM > 1){
		duraString = duraM + " "  + "分钟";
	}else if(duraM == 1){
		duraString = duraM + " "  + "分钟";
	}
	
	if(duraH > 1){
		duraString = duraH + " " + "小时" + " " +duraString; 
	}else if(duraH == 1){
		duraString = duraH + " " + "小时" + " " +duraString; 
	}
	$("#confDuration").text(duraString);    //会议时长 ：1小时30分
	if(confBase.permanentConf && confBase.permanentConf=="1"){
		$("#durationConsole").hide();
		$("#endTimeConsole").show();
		$("#confEndTimeConsole").text(confBase.endTime);
	}
	$(".valid-group").eq(3).show().siblings().hide();
}
//重新创建会议完成后返回会议信息到成功页面
function reCreateConfSuccess(result) {
	$(".face-success").text("重新创建会议成功！");
	var confBase = result.confBase[0];
	var frame = parent.$("#bookMeeting");
	frame.data("data", result);
	$("#confIdForEmail").val(confBase.id);
	$("#confTitle").text(confBase.confName);   //会议主题
	$("#confStartTime").text(confBase.startTime);
	$(".cycleTypeTR").hide();     //周期类型
	$(".cycleTimeTRD").hide();	 //周期时间
	$("#confPatternTR").hide();
	$("#confRepeatTR").hide();
	var confType = confBase.confType;
	if(confBase.confType == 1){
		confType = "电话功能";       //会议类型 :电话功能    
	}
	if(confBase.confType == 2){
		confType = "视频功能";  	//会议类型 :视频功能   
	}
	if(confBase.confType == 3){
		confType = "视频功能、电话功能";         //会议类型 :视频功能、电话功能  
	}
	$("#confType").text(confType);         //会议功能    
	if(confBase.confType == 0){
		$(".confTypeTR").hide();	 //隐藏会议类型
//		confType = validString.pageRequired.firConfType;       //会议功能 :数据会议功能   
	}
	$("#confVoicePattern").text("网络语音");
	if(confType==1 || confType==3){   //语音模式为：网络语音+电话语音
		$("#confVoicePattern").text("网络语音+电话语音");
	}
	$("#maxUserSpan").text(confBase.maxUser);         //最大参会人数
	$("#userSecureSpan").text(confBase.userSecure); 		//与会者安全会议号
	$("#confDescSpan").text(confBase.confDesc); 		//会议描述
	var duraH = parseInt(confBase.duration/60);
	var duraM = confBase.duration%60;
	var duraString = "";
	if(duraM > 1){
		duraString = duraM + " "  + "分钟";
	}else if(duraM == 1){
		duraString = duraM + " "  + "分钟";
	}
	
	if(duraH > 1){
		duraString = duraH + " " + "小时" + " " +duraString; 
	}else if(duraH == 1){
		duraString = duraH + " " + "小时" + " " +duraString; 
	}
	$("#confDuration").text(duraString);    //会议时长 ：1小时30分
	$(".valid-group").eq(3).show().siblings().hide();
}

function saveOrUpdateMeeting() {
	var data = {};
	//基本信息
	data.confName = $("#confName").val();
	//主持人密码
	data.hostKey = $("#hostKey").val();
	//语音模式
	data.publicFlag = 2;
	var allowPublic = $('input:radio[name="allowPublic"]:checked').val();
	if(allowPublic=="1"){
		data.publicFlag = 1;
		var publicPass = $('input:radio[name="publicPass"]:checked').val();//$(".passSetCheck").attr("checked");
		if(publicPass && publicPass=="1"){
			data.publicConfPass = $("#confPass").val();	
		}
	} else {
		var assign = $('input:radio[name="confInviterRadio"]:checked').val();
		if(assign && assign=="0"){
			data.publicFlag = 3;
		}
	}
	data.confDesc = $("#confDesc").val();
	
	//时间信息
	var cycleOption = $('input:radio[name="repeat"]:checked').val();//周期选项1是开启,2是关闭
	data.cycleOption = cycleOption;
	var startDateStr=$("#startTime").val()+" "+$("#startTimeH").val()+":"+$("#startTimeM").val()+":00";
	data.startTime = startDateStr.parseDate().format("yyyy-MM-dd hh:mm:ss");
	//持续时间
	var bytype = $('input:radio[name="bytype"]:checked').val();
	if (bytype && bytype=="1") {
		var endDateStr = $("#endTime").val()+" "+$("#endTimeH").val()+":"+$("#endTimeM").val()+":00";
		data.endTime = endDateStr.parseDate().format("yyyy-MM-dd hh:mm:ss"); 
	} else {
		var durationH = parseInt($("#durationH").val(), 10);
		var durationM = parseInt($("#durationM").val(), 10);
		var duration = durationH*60 + durationM; 
		if(duration>0){
			data.duration = duration;
		}
	}
	if(cycleOption=="1"){
		var cycleType = $('input:radio[name="ontime"]:checked').val();
		data.cycleType = cycleType;
		if(cycleType==1){
			//按天
			data.cycleValue = $("#cycleDayFlag").val();
		} else if (cycleType==2) {
			//按周
			var chk_value =[];    
			$('input[name="weekday"]:checked').each(function(){    
			   chk_value.push($(this).val());    
			});
			data.cycleValue = chk_value.toString();
		} else {
			//按月
			var monthFlag = $('input:radio[name="month-type"]:checked').val();
			if(monthFlag==1) {
				data.cycleValue = $("#eachMonthDay").val();
			} else {
				var week = $("#weekFlag").val();
				var weekDay = $("#weekDay").val();
				data.cycleValue = week+";"+weekDay;
			}
		}
		data.beginDate = startDateStr.parseDate().format("yyyy-MM-dd hh:mm:ss");// $("#startTime").val()+" "+$("#startTimeH").val()>0+":"+$("#startTimeM").val()+":00";

		var endDate = $("#endTimeForEver").val();
		var infiniteFlag = $('input:radio[name="repeatScope"]:checked').val();
		//	无限循环会议
		if(infiniteFlag==1){
			data.infiniteFlag = 1;
			endDate = "2100-01-01";
		}
		//	按次数循环
		if(infiniteFlag==2){
			data.repeatCount = $("#repeatCount").val();
			endDate = "2100-01-01";
		}
		
		var endDateStr = endDate +" "+$("#startTimeH").val()+":"+$("#startTimeM").val()+":00";
		data.endTime = endDateStr.parseDate().format("yyyy-MM-dd hh:mm:ss");
		data.endDate = endDateStr.parseDate().format("yyyy-MM-dd hh:mm:ss");//$("#endTime").val()+" "+$("#startTimeH").val()>0+":"+$("#startTimeM").val()+":00";
	}
	
	//永久会议创建
	var endTypeFlag = $('input:radio[name="bytype"]:checked').val();
	if(endTypeFlag && endTypeFlag=="1"){
		var endDate = $("#endTime").val();
		var endHour = $("#endTimeH").val();
		var endMinute = $("#endTimeM").val();
		var dateStr = endDate+" "+endHour+":"+endMinute+":00";
		data.endTime = dateStr; 
		data.duration = "";
	}
	
	//永久会议修改
	var permanentConf = $('#permanentConf_id').val();
	if(permanentConf && permanentConf=="1"){
		data.permanentConf = permanentConf;
		var endDate = $("#endTime").val();
		var endHour = $("#endTimeH").val();
		var endMinute = $("#endTimeM").val();
		var dateStr = endDate+" "+endHour+":"+endMinute+":00";
		data.endTime = dateStr;
	}
	
	//会议类型
	var confType_value =[];    
	$('input[name="meetType"]:checked').each(function(){    
		confType_value.push($(this).val());    
	});
	if(confType_value.length>0){
		data.confType = confType_value.length==1?confType_value[0]:3;	
	}
	//外乎
	var checkConfType = $("input:checkbox[name=meetType]:eq(1)").attr("checked");
	if(checkConfType) {
		var micStatus = $('input:radio[name="allowCall"]:checked').val();
		if(micStatus==1) {
			data.allowCall = micStatus;
		} else {
			data.allowCall = 0;
		}
	}
	//会议模式
	var confModel = $('input:radio[name="meetMode"]:checked').val();
	if(confModel==1){
		data.confModel = confModel;
	}
	//麦克风状态
	var micStatus = $('input:radio[name="mikeMode"]:checked').val();
	if(micStatus==1) {
		data.micStatus = micStatus;
	}
	//最大音频、视频、视频画质、提前时间
	data.maxVideo = $("#maxVideo").val();
	data.maxAudio = $("#maxAudio").val();
	data.videoType = $('input:radio[name="videoQuality"]:checked').val();
	data.aheadTime = $("#aheadTime").val();
	//参会人权限、会议功能
	$('.extraPermission').each(function(){
		var index = $(this).val();
		var name = $(this).attr("name");
		var checked = $(this).attr("checked");
		if(checked=="checked"){
			data[name] = index;
		}
	});
	$('.clientOption').each(function(){
		var index = $(this).val();
		var name = $(this).attr("name");
		var checked = $(this).attr("checked");
		if(checked=="checked"){
			data[name] = index;
		}
	});
	
	if(confID){
		data.id = confID; 
		data.confHwid = confHwid;
		data.timeZone = timeZone;
		if(cycleID && cycleID!="0"){
			data.cycleId = cycleID;
			if(cycleConfType == 2) {
				//重新创建会议
				app.reCreateConf(data, function(result) {
					if(result && result.status=="1") {
						reCreateConfSuccess(result);
					}else {
						parent.errorDialog(result.message);
					}
				},{message:"正在重新创建会议, 请稍等...",ui:top.window, pageLoading: "true"});	
			}else if(cycleConfType == 1) {
				//修改循环会议中的所有会议
				app.updateCycleMeeting(data, function(result) {
					if(result && result.status=="1") {
						updateMeetSuccess(result);
					}else {
						parent.errorDialog(result.message);
					}
				},{message:"正在修改会议, 请稍等...",ui:top.window, pageLoading: "true"});	
			} else {
				//修改循环中的一条
				app.updateCycleOneMeeting(data, function(result) {
					if(result && result.status=="1") {
						updateMeetSuccess(result);
					}else {
						parent.errorDialog(result.message);
					}
				},{message:"正在修改会议, 请稍等...",ui:top.window, pageLoading: "true"});						
			}
		}else if(cycleConfType == 2) {
			//重新创建会议
			app.reCreateConf(data, function(result) {
				if(result && result.status=="1") {
					reCreateConfSuccess(result);
				}else {
					parent.errorDialog(result.message);
				}
			},{message:"正在重新创建会议, 请稍等...",ui:top.window, pageLoading: "true"});	
		}else{
			//修改单次会议
			app.updateBookMeeting(data, function(result) {
				if(result && result.status=="1") {
					updateMeetSuccess(result);
				}else {
					parent.errorDialog(result.message);
				}
			},{message:"正在修改会议, 请稍等...",ui:top.window, pageLoading: "true"});
		}
	} else {
		//首次创建会议
		app.bookMeeting(data,function(result) {
			if(result && result.status=="1") {
				createMeetSuccess(result);
			}else {
				parent.errorDialog(result.message);
			}
		},{message:"正在创建会议, 请稍等...",ui:top.window, pageLoading: "true"});		
	}


}
jQuery(function($) {
	
	//第一步的验证
	$.formValidator.initConfig({
		formID : "scheduleForm1",
		debug : false,
		onSuccess : function() {
			$(".valid-group").eq(1).show().siblings().hide();
		},
		onError : function() {
			//alert("具体错误，请看网页上的提示");
		}
	});
	
	$("#confName").formValidator({
		onShow : "1-32个任意字符",
		onFocus : "1-32个任意字符",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 32,
		empty : {
			leftEmpty : false,
			rightEmpty : false,
			emptyError : "会议主题两边不能有空符号"
		},
		onError : "1-32个任意字符"
	});
	
	$("#hostKey").formValidator({
		onShow : "6-12个数字",
		onFocus : "6-12个数字",
		onCorrect : ""
	}).inputValidator({
		min : 6,
		max : 12,
		empty : {
			leftEmpty : false,
			rightEmpty : false,
			emptyError : "主持人密码两边不能有空符号"
		},
		onError : "6-12个数字"
	}).regexValidator({
		regExp : "num",
		dataType : "enum",
		onError : "6-12个数字"
	});
	$("#confPass").formValidator({
		onShow : "1-16个任意字符",
		onFocus : "1-16个任意字符",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 16,
		onError : "1-16个任意字符"
	});
	$("#confirmPass").formValidator({
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 16,
		onError : "1-16个任意字符"
	}).compareValidator({
		desID : "confPass",
		operateor : "=",
		onError : "2次密码不一致,请确认"
	});
	
	$("#confDesc").formValidator({
		empty : true,
		onShow : "",
		onFocus : "",
		onCorrect : "",
		onEmpty : ""
	}).inputValidator({
		min : 1,
		max : 256,
		onError : ""
	});
	
	//会议密码默认验证
	var publicPassRadio = $('input:radio[name="publicPass"]:checked').val();
	if(publicPassRadio=="2") {
		$("#confPass").unFormValidator(true);
		$("#confirmPass").unFormValidator(true);
	}
	//默认光标定位
	setCursor("confName", $("#confName").val().length);
	//第二步的验证
	$.formValidator.initConfig({
		validatorGroup:"2",
		formID : "scheduleForm2",
		debug : false,
		onSuccess : function() {
			$(".valid-group").eq(2).show().siblings().hide();
		},
		onError : function() {
			//alert("具体错误，请看网页上的提示");
		}
	});
	$("#durationH").formValidator({
		validatorGroup:"2",
		tipID: "durationTip",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		onError : "会议时长不能为0"
	}).functionValidator({
	    fun:function(val,elem){
	    	var durationH = $("#durationH").val();
			var durationM = $("#durationM").val();
			if (durationH=="0" && durationM=="0") {
			    return "会议时长不能为0";
		    }else{
			    return true;
		    }
		}
	});
	
	$("#durationM").formValidator({
		validatorGroup:"2",
		tipID: "durationTip",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		onError : "会议时长不能为0"
	}).functionValidator({
	    fun:function(val,elem){
	    	var durationH = $("#durationH").val();
			var durationM = $("#durationM").val();
			if (durationH=="0" && durationM=="0") {
			    return "会议时长不能为0";
		    }else{
			    return true;
		    }
		}
	});
	
	$("#cycleDayFlag").formValidator({
		validatorGroup:"2",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 31,
		type:"value",
		empty : {
			leftEmpty : false,
			rightEmpty : false,
			emptyError : "间隔天数两边不能有空符号"
		},
		onError : "请输入正确的间隔天数"
	}).regexValidator({
		regExp : "num",
		dataType : "enum",
		onError : "请输入正确的间隔天数"
	});
	
	$("#eachMonthDay").formValidator({
		validatorGroup:"2",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 31,
		type:"value",
		empty : {
			leftEmpty : false,
			rightEmpty : false,
			emptyError : "间隔天数两边不能有空符号"
		},
		onError : "请输入正确的间隔天数"
	}).regexValidator({
		regExp : "num",
		dataType : "enum",
		onError : "请输入正确的间隔天数"
	});
	$("#repeatCount").formValidator({
		validatorGroup:"2",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 31,
		type:"value",
		onError : "请输入正确的重复次数"
	}).regexValidator({
		regExp : "num",
		dataType : "enum",
		onError : "请输入正确的重复次数"
	});
	
	$(":checkbox[name='weekday']").formValidator({
		validatorGroup:"2",
		tipID: "weekdayTip",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		onError : "至少选择1个星期"
	});
	$("#startTime").formValidator({
		validatorGroup : "2",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).functionValidator({
 		    fun:function(val,elem){
 		    	//如果是按持续时间  开始时间默认小于2100-12-12
 		    	var errorMessage = "";
 		    	var endTimeValue = "2100-12-12";
 		    	//如果是重复周期 需要判断开始日期应该小于结束日期
 		    	var repeatRadio = $('input:radio[name="repeat"]:checked').val();
 		    	if (repeatRadio=="1") {
 		    		endTimeValue = $("#endTimeForEver").val();
 		    		errorMessage = "开始时间应小于结束日期";
 		    	} else {
 		    		//如果是按结束时间 需要判断开始时间应该小于结束时间 
 		    		var bytypeRadio = $('input:radio[name="bytype"]:checked').val();
 		    		if (bytypeRadio=="1") {
 		 		    	endTimeValue = $("#endTime").val();
 		 		    	errorMessage = "开始时间应小于结束时间";
 		    		}
 		    	}
 		        if(val<=endTimeValue){
 				    return true;
 			    }else{
 				    return errorMessage;
 			    }
 			}
 	});
	$("#endTime").formValidator({
		validatorGroup : "2",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).functionValidator({
 		    fun:function(val,elem){
 		    	//如果是重复周期  不需要判断
 		    	var repeatRadio = $('input:radio[name="repeat"]:checked').val();
 		    	if (repeatRadio=="1") {
 		    		return true;
 		    	}
 		    	//如果是持续时间 不需要判断
		    	var bytypeRadio = $('input:radio[name="bytype"]:checked').val();
		    	if (bytypeRadio=="2") {
		    		return true;
		    	}
 		    	var startTimeValue = $("#startTime").val();
 		        if(val>=startTimeValue){
 				    return true;
 			    }else{
 				    return "结束时间应大于开始时间";
 			    }
 			}
 	});
	
	$("#endTimeForEver").formValidator({
		validatorGroup : "2",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).functionValidator({
 		    fun:function(val,elem){
 		    	//如果不是重复周期  不需要判断
 		    	var repeatRadio = $('input:radio[name="repeat"]:checked').val();
 		    	if (repeatRadio=="2") {
 		    		return true;
 		    	}
 		    	var startTimeValue = $("#startTime").val();
 		        if(val>=startTimeValue){
 				    return true;
 			    }else{
 				    return "结束日期应大于开始时间";
 			    }
 			}
 	});
	//定期模式默认验证
	var ontimeRadio = $('input:radio[name="ontime"]:checked').val();
	if (ontimeRadio=="1") {
		$("#cycleDayFlag").unFormValidator(false);
		$(":checkbox[name='weekday']").unFormValidator(true);
		$("#eachMonthDay").unFormValidator(true);
	} else if(ontimeRadio=="2") {
		$("#cycleDayFlag").unFormValidator(true);
		$(":checkbox[name='weekday']").unFormValidator(false);
		$("#eachMonthDay").unFormValidator(true);
	} else if(ontimeRadio=="3") {
		$("#cycleDayFlag").unFormValidator(true);
		$(":checkbox[name='weekday']").unFormValidator(true);
		$("#eachMonthDay").unFormValidator(false);
	}

	//第三步的验证
	$.formValidator.initConfig({
		validatorGroup:"3",
		formID : "scheduleForm3",
		debug : false,
		onSuccess : function() {
			saveOrUpdateMeeting();
		},
		onError : function() {
			//alert("具体错误，请看网页上的提示");
		}
	});
	
	$("#aheadTime").formValidator({
		validatorGroup:"3",
		onShow : "",
		onFocus : "",
		onCorrect : ""
	}).inputValidator({
		min : 1,
		max : 30,
		type:"value",
		onError : "请输入正确的会议提前时间"
	}).regexValidator({
		regExp : "num",
		dataType : "enum",
		onError : "请输入正确的会议提前时间"
	});
	//定期模式
	$(".cycleType").change(function() {
		var tab = $(this).closest('.tab');
		var name = tab.attr("data-tab");
		var panel = tab.closest('.tabview');
		// switch tabs status
		tab.addClass('active').siblings().removeClass('active');
		// switch views status
		var viewspanel = panel.find('[data-view]:first').parent();
		viewspanel.children('[data-view]').hide().filter('[data-view="' + name + '"]').show();
		if (name=="day") {
			$("#cycleDayFlag").unFormValidator(false);
			$(":checkbox[name='weekday']").unFormValidator(true);
			$("#eachMonthDay").unFormValidator(true);
		} else if(name=="week") {
			$("#cycleDayFlag").unFormValidator(true);
			$(":checkbox[name='weekday']").unFormValidator(false);
			$("#eachMonthDay").unFormValidator(true);
		} else if(name=="month") {
			$("#cycleDayFlag").unFormValidator(true);
			$(":checkbox[name='weekday']").unFormValidator(true);
			$("#eachMonthDay").unFormValidator(false);
		}
	});
	//重复范围
	$(".repeat-scope").change(function() {
		var value = $(this).val();
		if (value=="1") {
			$("#repeatCount").unFormValidator(true);
			$("#endTimeForEver").unFormValidator(true);
		} else if (value=="2") {
			$("#repeatCount").unFormValidator(false);
			$("#endTimeForEver").unFormValidator(true);
		} else if (value=="3") {
			$("#repeatCount").unFormValidator(true);
			$("#endTimeForEver").unFormValidator(false);
		}
	});
	// 高级参数设置
	jQuery(document).on('click', '.meeting-dialog .regular .legend .config', function() {
		jQuery(this).closest('.regular').toggleClass('open');
	});

	$('.button-ok').click(function (evt) {
		var frame = parent.$("#bookMeeting");
		var data = frame.data("data");
		frame.trigger("closeDialog", [data]);
	});	
	$('.meeting-dialog .prev-button').click(function (evt) {
		var pageIndex = $(this).attr("page-index");
		$(".valid-group").eq(pageIndex).show().siblings().hide();
	});
	$('#schedultFailButton').click(function (evt) {
		$(".valid-group").eq(2).show().siblings().hide();
	});
	//设置重复周期
	$(".repeat-cycle").change(function() {
		var value = $(this).val();
		if (value=="1") {
			$(".endtime-widget").hide();
			$(".duration-group").hide();
			$(".duration-widget").show();
			$(".repeat-widget").show();
			$("input:radio[name=bytype]:eq(1)").attr("checked",'checked');
		} else {
			$(".duration-group").show();
			$(".repeat-widget").hide();
		}
	});		
	//设置公开会议
	$(".allowPublic").change(function() {
		var value = $(this).val();
		if (value=="1") {
			$(".publicPassSet-widget").show();
			$(".assign-widget").hide();
		} else {
			$(".assign-widget").show();
			$(".publicPassSet-widget").hide();
			$(".publicPass-widget").hide();
			$("input:radio[name=publicPass]:eq(1)").attr("checked",'checked');
		}
	});	
	//设置公开会议密码
	$(".publicPass").change(function() {
		var value = $(this).val();
		if (value=="1") {
			$(".publicPass-widget").show();
			$("#confPass").unFormValidator(false);
			$("#confirmPass").unFormValidator(false);
		} else {
			$(".publicPass-widget").hide();
			$("#confPass").unFormValidator(true);
			$("#confirmPass").unFormValidator(true);
		}
	});
	//设置结束时间
	$(".bytype").change(function() {
		var value = $(this).val();
		if (value=="1") {
			$(".endtime-widget").show();
			$(".duration-widget").hide();
		} else {
			$(".endtime-widget").hide();
			$(".duration-widget").show();
		}
	});
	
	var lang = getBrowserLang(); 
	if (lang=="zh-cn") {
		$.datepicker.setDefaults( $.datepicker.regional[ "zh-CN" ] );
	} else {
		$.datepicker.setDefaults( $.datepicker.regional[ "en-GB" ] );
	}
	$("#startTime, #endTime, #endTimeForEver").datepicker({
		minDate: 0,
		changeMonth: true,
		changeYear: true,			
		dateFormat: "yy-mm-dd",
		onClose: function() {
			$(this).blur();
		}
	});
	
	$("#confDesc").keyup(function() {
		var nowLength=$(this).val().length;
		if (nowLength>256) {
			$(".count").css("color", "#C91600");
		} else {
			$(".count").css("color", "#B0B0B0");
		}
		$("#nowCountSpan").text(nowLength);
	}).bind('paste', function(){
		$(this).prev('label').hide();
	});
});